{"version":3,"sources":["webpack:///app.cd516d9a368a91553c89.js","webpack:///./src/main.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.css"],"names":["webpackJsonp","0","module","exports","__webpack_require__","platform_browser_dynamic_1","core_1","app_module_1","enableProdMode","platformBrowserDynamic","bootstrapModule","AppModule","23","__decorate","this","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","platform_browser_1","app_component_1","lib_1","NgModule","imports","BrowserModule","ColorPickerModule","declarations","AppComponent","providers","ColorPickerService","bootstrap","24","Cmyk","m","y","cpService","color","color2","color3","color4","color5","color6","color7","color8","color9","color10","color11","color12","color13","color14","color15","arrayColors","selectedColor","lastColor","cmyk","prototype","onChangeColor","rgbaToCmyk","hsvaToRgba","stringToHsva","rgba","Math","max","g","b","onChangeColorHex8","outputFormat","Component","selector","template","styles","_a","25","34","35"],"mappings":"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","file":"app.cd516d9a368a91553c89.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar platform_browser_dynamic_1 = __webpack_require__(1);\r\n\tvar core_1 = __webpack_require__(3);\r\n\tvar app_module_1 = __webpack_require__(23);\r\n\tif (true) {\r\n\t    core_1.enableProdMode();\r\n\t}\r\n\tplatform_browser_dynamic_1.platformBrowserDynamic().bootstrapModule(app_module_1.AppModule);\r\n\n\n/***/ },\n\n/***/ 23:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar core_1 = __webpack_require__(3);\r\n\tvar platform_browser_1 = __webpack_require__(21);\r\n\tvar app_component_1 = __webpack_require__(24);\r\n\tvar lib_1 = __webpack_require__(29);\r\n\tvar AppModule = (function () {\r\n\t    function AppModule() {\r\n\t    }\r\n\t    AppModule = __decorate([\r\n\t        core_1.NgModule({\r\n\t            imports: [\r\n\t                platform_browser_1.BrowserModule,\r\n\t                lib_1.ColorPickerModule\r\n\t            ],\r\n\t            declarations: [\r\n\t                app_component_1.AppComponent\r\n\t            ],\r\n\t            providers: [lib_1.ColorPickerService],\r\n\t            bootstrap: [app_component_1.AppComponent]\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [])\r\n\t    ], AppModule);\r\n\t    return AppModule;\r\n\t}());\r\n\texports.AppModule = AppModule;\r\n\n\n/***/ },\n\n/***/ 24:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar core_1 = __webpack_require__(3);\r\n\t__webpack_require__(25);\r\n\tvar lib_1 = __webpack_require__(29);\r\n\tvar Cmyk = (function () {\r\n\t    function Cmyk(c, m, y, k) {\r\n\t        this.c = c;\r\n\t        this.m = m;\r\n\t        this.y = y;\r\n\t        this.k = k;\r\n\t    }\r\n\t    return Cmyk;\r\n\t}());\r\n\texports.Cmyk = Cmyk;\r\n\tvar AppComponent = (function () {\r\n\t    function AppComponent(cpService) {\r\n\t        this.cpService = cpService;\r\n\t        this.color = '#2889e9';\r\n\t        this.color2 = \"hsla(300,82%,52%)\";\r\n\t        this.color3 = \"#fff500\";\r\n\t        this.color4 = \"rgb(236,64,64)\";\r\n\t        this.color5 = \"rgba(45,208,45,1)\";\r\n\t        this.color6 = \"#1973c0\";\r\n\t        this.color7 = \"#f200bd\";\r\n\t        this.color8 = \"#a8ff00\";\r\n\t        this.color9 = \"#278ce2\";\r\n\t        this.color10 = \"#0a6211\";\r\n\t        this.color11 = \"#f2ff00\";\r\n\t        this.color12 = \"#f200bd\";\r\n\t        this.color13 = \"#1973c0\";\r\n\t        this.color14 = \"#a8ff00\";\r\n\t        this.color15 = \"#a51ad6a3\";\r\n\t        this.arrayColors = {};\r\n\t        this.selectedColor = 'color';\r\n\t        this.lastColor = '#ff0';\r\n\t        this.cmyk = new Cmyk(0, 0, 0, 0);\r\n\t        this.arrayColors['color'] = '#2883e9';\r\n\t        this.arrayColors['color2'] = '#e920e9';\r\n\t        this.arrayColors['color3'] = 'rgb(255,245,0)';\r\n\t        this.arrayColors['color4'] = 'rgb(236,64,64)';\r\n\t        this.arrayColors['color5'] = 'rgba(45,208,45,1)';\r\n\t    }\r\n\t    AppComponent.prototype.onChangeColor = function (color) {\r\n\t        return this.rgbaToCmyk(this.cpService.hsvaToRgba(this.cpService.stringToHsva(color)));\r\n\t    };\r\n\t    AppComponent.prototype.rgbaToCmyk = function (rgba) {\r\n\t        var cmyk = new Cmyk(0, 0, 0, 0), k;\r\n\t        k = 1 - Math.max(rgba.r, rgba.g, rgba.b);\r\n\t        if (k == 1)\r\n\t            return new Cmyk(0, 0, 0, 1);\r\n\t        cmyk.c = (1 - rgba.r - k) / (1 - k);\r\n\t        cmyk.m = (1 - rgba.g - k) / (1 - k);\r\n\t        cmyk.y = (1 - rgba.b - k) / (1 - k);\r\n\t        cmyk.k = k;\r\n\t        return cmyk;\r\n\t    };\r\n\t    AppComponent.prototype.onChangeColorHex8 = function (color) {\r\n\t        return this.cpService.outputFormat(this.cpService.stringToHsva(color, true), 'rgba', true);\r\n\t    };\r\n\t    AppComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'my-app',\r\n\t            template: __webpack_require__(34),\r\n\t            styles: [__webpack_require__(35)]\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [(typeof (_a = typeof lib_1.ColorPickerService !== 'undefined' && lib_1.ColorPickerService) === 'function' && _a) || Object])\r\n\t    ], AppComponent);\r\n\t    return AppComponent;\r\n\t    var _a;\r\n\t}());\r\n\texports.AppComponent = AppComponent;\r\n\n\n/***/ },\n\n/***/ 25:\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n\n/***/ 34:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"container\\\">\\r\\n    <h1>Angular2 Color Picker Directive</h1>\\r\\n    <h4>A Color Picker Directive for Angular 2 with no dependencies.</h4>\\r\\n    <h4><b>by Alberto Pujante</b></h4>\\r\\n    <a class=\\\"btn btn-primary btn-lg\\\" href=\\\"https://github.com/Alberplz/angular2-color-picker\\\">View on Github</a>\\r\\n\\r\\n    <hr>\\r\\n    <div class=\\\"row\\\">         \\r\\n        <div class=\\\"col-md-5\\\">\\r\\n            <input [(colorPicker)]=\\\"color\\\" [style.background]=\\\"color\\\"/>\\r\\n        </div>   \\r\\n        <div class=\\\"col-md-7\\\">  \\r\\n            <p>Usage:</p>\\r\\n            <pre>\\r\\n&lt;input [(colorPicker)]=\\\"color\\\" \\r\\n       [style.background]=\\\"color\\\"/&gt;\\r\\n            </pre>            \\r\\n            <p>Or:</p>\\r\\n            <pre>\\r\\n&lt;input [colorPicker]=\\\"color\\\" \\r\\n        (colorPickerChange)=\\\"color=$event\\\"\\r\\n        [style.background]=\\\"color\\\"/&gt;\\r\\n            </pre>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <hr>\\r\\n    <div class=\\\"row\\\">         \\r\\n        <div class=\\\"col-md-5\\\">\\r\\n            <input [(colorPicker)]=\\\"color2\\\" \\r\\n                [style.background]=\\\"color2\\\" \\r\\n                [value]=\\\"color2\\\"/>\\r\\n        </div>   \\r\\n        <div class=\\\"col-md-7\\\">  \\r\\n            <p>Show the color in the input field:</p>\\r\\n            <pre>\\r\\n&lt;input [(colorPicker)]=\\\"color\\\" \\r\\n       [style.background]=\\\"color\\\" \\r\\n       [value]=\\\"color\\\"/&gt;\\r\\n            </pre>            \\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <hr>\\r\\n    <div class=\\\"row\\\">         \\r\\n        <div class=\\\"col-md-5\\\">\\r\\n            <input [(colorPicker)]=\\\"color3\\\" \\r\\n                [style.background]=\\\"color3\\\" \\r\\n                [value]=\\\"color3\\\"    \\r\\n                [cpOutputFormat]=\\\"'rgba'\\\"/><br><br>\\r\\n            <input [(colorPicker)]=\\\"color4\\\" \\r\\n                [style.background]=\\\"color4\\\" \\r\\n                [value]=\\\"color4\\\"    \\r\\n                [cpOutputFormat]=\\\"'hsla'\\\"/>\\r\\n        </div>   \\r\\n        <div class=\\\"col-md-7\\\">  \\r\\n            <p>Output format:</p>\\r\\n            <pre>\\r\\n&lt;input [(colorPicker)]=\\\"color\\\" \\r\\n       [style.background]=\\\"color\\\" \\r\\n       [value]=\\\"color\\\"\\r\\n       [cpOutputFormat]=\\\"'rgba'\\\"/&gt;\\r\\n            </pre>            \\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <hr>\\r\\n    <div class=\\\"row\\\" > \\r\\n        <div class=\\\"col-md-5\\\" >\\r\\n            <input [(colorPicker)]=\\\"color5\\\" \\r\\n                [style.background]=\\\"color5\\\"                   \\r\\n                [value]=\\\"color5\\\"\\r\\n                [cpPosition]=\\\"'bottom'\\\"/>\\r\\n        </div>   \\r\\n        <div class=\\\"col-md-7\\\">  \\r\\n            <p>Changing dialog position:</p>\\r\\n            <pre>\\r\\n&lt;input [(colorPicker)]=\\\"color\\\" \\r\\n       [style.background]=\\\"color\\\" \\r\\n       [value]=\\\"color\\\"\\r\\n       [cpPosition]=\\\"'bottom'\\\"/&gt;\\r\\n            </pre>            \\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <hr>\\r\\n    <div class=\\\"row\\\" > \\r\\n        <div class=\\\"col-md-5\\\" >\\r\\n            <span id=\\\"changeme\\\" [(colorPicker)]=\\\"color6\\\" \\r\\n                  [style.color]=\\\"color6\\\"\\r\\n                  [cpPosition]=\\\"'bottom'\\\"\\r\\n                  [cpPositionOffset]=\\\"'50%'\\\"\\r\\n                  [cpPositionRelativeToArrow]=\\\"true\\\">Change me!</span>\\r\\n        </div>   \\r\\n        <div class=\\\"col-md-7\\\">  \\r\\n            <p>You can introduce a offset of the color picker relative to the html element:</p>\\r\\n            <pre>\\r\\n&lt;span [(colorPicker)]=\\\"color\\\" \\r\\n      [cpPosition]=\\\"'bottom'\\\"\\r\\n      [style.color]=\\\"color\\\"\\r\\n      [cpPositionOffset]=\\\"'50%'\\\"\\r\\n      [cpPositionRelativeToArrow]=\\\"true\\\">Change me!&lt;/span&gt;\\r\\n            </pre>            \\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <hr>\\r\\n    <div class=\\\"row\\\" > \\r\\n        <div class=\\\"col-md-5\\\" >\\r\\n            <input [(colorPicker)]=\\\"color7\\\" \\r\\n                [style.background]=\\\"color7\\\"                   \\r\\n                [value]=\\\"color7\\\"\\r\\n                [cpCancelButton]=\\\"true\\\"/>\\r\\n        </div>   \\r\\n        <div class=\\\"col-md-7\\\">  \\r\\n            <p>Show cancel button:</p>\\r\\n            <pre>\\r\\n&lt;input [(colorPicker)]=\\\"color\\\" \\r\\n       [style.background]=\\\"color\\\" \\r\\n       [value]=\\\"color\\\"\\r\\n       [cpCancelButton]=\\\"true\\\"/&gt;\\r\\n            </pre>            \\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <hr>\\r\\n    <div class=\\\"row\\\" > \\r\\n        <div class=\\\"col-md-5\\\" >\\r\\n            <input [(colorPicker)]=\\\"color8\\\" \\r\\n                [style.background]=\\\"color8\\\"                   \\r\\n                [value]=\\\"color8\\\"\\r\\n                [cpCancelButton]=\\\"true\\\"\\r\\n                [cpCancelButtonClass]= \\\"'btn btn-primary btn-xs'\\\"/>\\r\\n        </div>   \\r\\n        <div class=\\\"col-md-7\\\">  \\r\\n            <p>Change cancel button class, in this example we are using a bootstrap button:</p>\\r\\n            <pre>\\r\\n&lt;input [(colorPicker)]=\\\"color\\\" \\r\\n       [style.background]=\\\"color\\\" \\r\\n       [value]=\\\"color\\\"\\r\\n       [cpCancelButton]=\\\"true\\\"\\r\\n       [cpCancelButtonClass]= \\\"'btn btn-primary btn-xs'\\\"/&gt;\\r\\n            </pre>            \\r\\n        </div>\\r\\n    </div>\\r\\n    \\r\\n    <hr>\\r\\n    <div class=\\\"row\\\" > \\r\\n        <div class=\\\"col-md-5\\\" >\\r\\n            <input [(colorPicker)]=\\\"color9\\\" \\r\\n                [style.background]=\\\"color9\\\"                   \\r\\n                [value]=\\\"color9\\\"\\r\\n                [cpOKButton]=\\\"true\\\"\\r\\n                [cpSaveClickOutside]=\\\"false\\\"\\r\\n                [cpOKButtonClass]= \\\"'btn btn-primary btn-xs'\\\"/>\\r\\n        </div>   \\r\\n        <div class=\\\"col-md-7\\\">  \\r\\n            <p>Show OK button:</p>\\r\\n            <pre>\\r\\n&lt;input [(colorPicker)]=\\\"color\\\" \\r\\n       [style.background]=\\\"color\\\" \\r\\n       [value]=\\\"color\\\"\\r\\n       [cpOKButton]=\\\"true\\\"\\r\\n       [cpSaveClickOutside]=\\\"false\\\"\\r\\n       [cpOKButtonClass]= \\\"'btn btn-primary btn-xs'\\\"/&gt;\\r\\n            </pre>            \\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <hr>\\r\\n    <div class=\\\"row\\\">         \\r\\n        <div class=\\\"col-md-5\\\">\\r\\n\\r\\n            <input [colorPicker]=\\\"color10\\\" \\r\\n                (colorPickerChange)=\\\"cmyk=onChangeColor($event);color10=$event\\\"\\r\\n                [style.background]=\\\"color10\\\"/>  \\r\\n\\r\\n            <div class=\\\"clearfix\\\"></div>\\r\\n\\r\\n            <div class=\\\"cmyk\\\">\\r\\n                <div>\\r\\n                    <span style=\\\"color:rgb(0,255,255);\\\" [style.font-size.px]=\\\"100*cmyk.c\\\">C</span>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <span style=\\\"color:rgb(255,0,255)\\\" [style.font-size.px]=\\\"100*cmyk.m\\\">M</span>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"clearfix\\\"></div>\\r\\n\\r\\n            <div class=\\\"cmyk\\\">    \\r\\n                <div>\\r\\n                    <span style=\\\"color:rgb(255,255,0)\\\" [style.font-size.px]=\\\"100*cmyk.y\\\">Y</span>\\r\\n                </div>    \\r\\n                <div>\\r\\n                    <span [style.font-size.px]=\\\"100*cmyk.k\\\">K</span>\\r\\n                </div>    \\r\\n            </div>\\r\\n            <div class=\\\"clearfix\\\"></div>\\r\\n            \\r\\n        </div>   \\r\\n        <div class=\\\"col-md-7\\\">  \\r\\n            <p>Change event color:</p>\\r\\n            <pre>\\r\\n&lt;input [colorPicker]=\\\"color\\\" \\r\\n       (colorPickerChange)=\\\"cmyk=onChangeColor($event);color=$event\\\"\\r\\n       [style.background]=\\\"color\\\"/&gt;\\r\\n\\r\\n&lt;span [style.font-size.px]=\\\"100*cmyk.c\\\"/&gt;C&lt;/span/&gt;\\r\\n&lt;span [style.font-size.px]=\\\"100*cmyk.m\\\"/&gt;M&lt;/span/&gt;\\r\\n&lt;span [style.font-size.px]=\\\"100*cmyk.y\\\"/&gt;Y&lt;/span/&gt;\\r\\n&lt;span [style.font-size.px]=\\\"100*cmyk.k\\\"/&gt;K&lt;/span/&gt;\\r\\n            </pre>            \\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <hr>\\r\\n    <div class=\\\"row\\\">         \\r\\n        <div class=\\\"col-md-5\\\">\\r\\n            <input [(colorPicker)]=\\\"color11\\\" \\r\\n                [style.background]=\\\"color11\\\" \\r\\n                [cpPresetColors]=\\\"['#fff', '#000', '#2889e9', '#e920e9', '#fff500', 'rgb(236,64,64)']\\\"/>\\r\\n        </div>   \\r\\n        <div class=\\\"col-md-7\\\">  \\r\\n            <p>With preset colors:</p>\\r\\n            <pre>\\r\\n&lt;input [(colorPicker)]=\\\"color\\\" \\r\\n       [style.background]=\\\"color\\\"\\r\\n       [cpPresetColors]=\\\"['#fff', '#000', '#2889e9', '#e920e9', '#fff500', 'rgb(236,64,64)']\\\"/&gt;\\r\\n            </pre>            \\r\\n        </div>\\r\\n    </div>\\r\\n    \\r\\n    <hr>\\r\\n    <div class=\\\"row\\\">         \\r\\n        <div class=\\\"col-md-5\\\">\\r\\n            <input #ignoredInput [(colorPicker)]=\\\"color12\\\"                \\r\\n                [(cpToggle)]=\\\"toggle2\\\" \\r\\n                [style.background]=\\\"color12\\\" \\r\\n                [cpIgnoredElements]=\\\"[ignoredButton, ignoredInput]\\\"/>             \\r\\n            <div class=\\\"clearfix\\\"></div>          \\r\\n            <button class=\\\"btn btn-primary\\\" \\r\\n                    (click)=\\\"toggle2=!toggle2;\\\" #ignoredButton>Toggle</button>\\r\\n            <br><br>\\r\\n            <div><b>Toggle status: {{toggle2}}</b></div>\\r\\n        </div>  \\r\\n        <div class=\\\"col-md-7\\\">  \\r\\n            <p>Use cpToggle with cpIgnoredElements:</p>\\r\\n            <pre>\\r\\n&lt;input #ignoredInput [(colorPicker)]=\\\"color\\\"\\r\\n       [(cpToggle)]=\\\"toggle\\\"\\r\\n       [style.background]=\\\"color\\\"\\r\\n       [cpIgnoredElements]=\\\"[ignoredButton, ignoredInput]\\\"/&gt;\\r\\n\\r\\n&lt;button (click)=\\\"toggle=!toggle;lastColor=color\\\"  \\r\\n         #ignoredButton&gt;&lt;/button&gt;    \\r\\n            </pre>            \\r\\n        </div>\\r\\n    </div>\\r\\n       \\r\\n    <hr>\\r\\n    <div class=\\\"row\\\">         \\r\\n        <div class=\\\"col-md-5\\\">\\r\\n            <input [(colorPicker)]=\\\"color13\\\" \\r\\n                [style.background]=\\\"color13\\\" \\r\\n                [cpAlphaChannel]=\\\"'disabled'\\\"\\r\\n                [value]=\\\"color13\\\"/>\\r\\n            <br>\\r\\n            <input [(colorPicker)]=\\\"color14\\\" \\r\\n                [style.background]=\\\"color14\\\" \\r\\n                [cpAlphaChannel]=\\\"'hex8'\\\"\\r\\n                [cpOutputFormat]=\\\"'rgba'\\\"\\r\\n                [value]=\\\"color14\\\"/>\\r\\n            <br>\\r\\n            <input [colorPicker]=\\\"color15\\\" \\r\\n                (colorPickerChange)=\\\"rgbaText=onChangeColorHex8($event);color15=$event\\\"\\r\\n                [style.background]=\\\"rgbaText\\\" \\r\\n                [cpAlphaChannel]=\\\"'hex8'\\\"   \\r\\n                [cpOutputFormat]=\\\"'hex'\\\"\\r\\n                [value]=\\\"color15\\\"/>\\r\\n        </div>   \\r\\n        <div class=\\\"col-md-7\\\">  \\r\\n            <p>Change alpha channel behaviour:</p>\\r\\n            <pre>\\r\\n&lt;input [(colorPicker)]=\\\"color\\\" \\r\\n       [style.background]=\\\"color\\\" \\r\\n       [cpAlphaChannel]=\\\"'disabled'\\\"\\r\\n       [value]=\\\"color\\\"/&gt;\\r\\n\\r\\n&lt;input [(colorPicker)]=\\\"color\\\" \\r\\n       [style.background]=\\\"color\\\" \\r\\n       [cpAlphaChannel]=\\\"'hex8'\\\"\\r\\n       [cpOutputFormat]=\\\"'rgba'\\\"\\r\\n       [value]=\\\"color\\\"/&gt;\\r\\n\\r\\n&lt;input [colorPicker]=\\\"color\\\" \\r\\n       (colorPickerChange)=\\\"rgbaText=onChangeColorHex8($event);color=$event\\\"\\r\\n       [style.background]=\\\"rgbaText\\\" \\r\\n       [cpAlphaChannel]=\\\"'hex8'\\\"    \\r\\n       [value]=\\\"color\\\"/&gt;\\r\\n            </pre>            \\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n        <hr>\\r\\n    <div class=\\\"row\\\" style=\\\"height: 320px\\\">         \\r\\n        \\r\\n        <div class=\\\"col-md-3\\\">\\r\\n            <span [(colorPicker)]=\\\"arrayColors[selectedColor]\\\"     \\r\\n                [cpDialogDisplay]=\\\"'inline'\\\"\\r\\n                [style.background]=\\\"arrayColors[selectedColor]\\\"\\r\\n                [cpCancelButtonClass]= \\\"'btn btn-primary btn-xs'\\\"\\r\\n                [cpCancelButton]=\\\"true\\\"\\r\\n                [cpToggle]=\\\"true\\\">\\r\\n            </span>             \\r\\n        </div>\\r\\n        \\r\\n        <div class=\\\"col-md-2\\\">\\r\\n            \\r\\n            <div class=\\\"array-colors-element\\\"\\r\\n                    [style.background]=\\\"arrayColors['color']\\\"\\r\\n                    (click)=\\\"selectedColor='color'\\\"></div>\\r\\n\\r\\n            <div class=\\\"array-colors-element\\\"\\r\\n                    [style.background]=\\\"arrayColors['color2']\\\"\\r\\n                    (click)=\\\"selectedColor='color2'\\\"></div>\\r\\n            \\r\\n            <div class=\\\"array-colors-element\\\"\\r\\n                    [style.background]=\\\"arrayColors['color3']\\\"\\r\\n                    (click)=\\\"selectedColor='color3'\\\"></div>\\r\\n            \\r\\n            <div class=\\\"array-colors-element\\\"\\r\\n                    [style.background]=\\\"arrayColors['color4']\\\"\\r\\n                    (click)=\\\"selectedColor='color4'\\\"></div>\\r\\n            \\r\\n            <div class=\\\"array-colors-element\\\"\\r\\n                    [style.background]=\\\"arrayColors['color5']\\\"\\r\\n                    (click)=\\\"selectedColor='color5'\\\"></div>\\r\\n                        \\r\\n        </div>                \\r\\n\\r\\n        <div class=\\\"col-md-7\\\">  \\r\\n            <p>Show the dialog permanently: </p>\\r\\n            <pre>\\r\\n&lt;span [(colorPicker)]=\\\"arrayColors[selectedColor]\\\"     \\r\\n      [cpType]=\\\"'fixed'\\\"\\r\\n      [style.background]=\\\"arrayColors[selectedColor]\\\"\\r\\n      [cpToggle]=\\\"true\\\"&gt;&lt;/span&gt;\\r\\n\\r\\n&lt;div [style.background]=\\\"arrayColors['color']\\\"\\r\\n     (click)=\\\"selectedColor='color'\\\"&gt;&lt;/div&gt;\\r\\n\\r\\n&lt;div [style.background]=\\\"arrayColors['color2']\\\"\\r\\n     (click)=\\\"selectedColor='color2'\\\"&gt;&lt;/div&gt;\\r\\n\\r\\n...\\r\\n            </pre>            \\r\\n        </div>\\r\\n    </div>\\r\\n        \\r\\n    <hr>\\r\\n    <br>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <table class=\\\"table\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th>Options</th>\\r\\n                        <th>Values (default values in bold)</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr>\\r\\n                        <td>cpOutputFormat</td>\\r\\n                        <td>\\r\\n                            <b>'hex'</b>, 'rgba', 'hsla'\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td>cpPosition</td>\\r\\n                        <td>\\r\\n                            <b>'right'</b>, 'left', 'top', 'bottom'\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td>cpPositionOffset</td>\\r\\n                        <td>                            \\r\\n                            <b>'0%'</b><br>\\r\\n                            Dialog offset (percent) relative to the element that contains the directive.\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td>cpPositionRelativeToArrow</td>\\r\\n                        <td>                            \\r\\n                            <b>false</b>, true <br>\\r\\n                            Dialog position is calculated relative to the dialog (false) or relative to the dialog arrow (true).\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td>cpWidth</td>\\r\\n                        <td>                            \\r\\n                            <b>'230px'</b><br>\\r\\n                            Use this option to set color picker dialog width (pixels).\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td>cpHeight</td>\\r\\n                        <td>                            \\r\\n                            <b>'auto'</b><br>\\r\\n                            Use this option to force color picker dialog height (pixels).\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td>cpSaveClickOutside</td>\\r\\n                        <td>                            \\r\\n                            <b>true</b>, false<br>\\r\\n                            If true the initial color is restored when user clicks outside.\\r\\n                        </td>\\r\\n                    </tr>                                    \\r\\n                    <tr>\\r\\n                        <td>cpOKButton</td>\\r\\n                        <td>                            \\r\\n                            <b>false</b>, true<br>  \\r\\n                            Shows the Ok button. Saves the selected color.\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td>cpOKButtonText</td>\\r\\n                        <td>\\r\\n                            <b>'OK'</b>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td>cpOKButtonClass</td>\\r\\n                        <td>                            \\r\\n                            Class to customize the OK button.\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td>cpCancelButton</td>\\r\\n                        <td>                             \\r\\n                            <b>false</b>, true<br>\\r\\n                            Shows the Cancel button. Cancel the selected color.\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td>cpCancelButtonText</td>\\r\\n                        <td>\\r\\n                            <b>'Cancel'</b>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td>cpCancelButtonClass</td>\\r\\n                        <td>                            \\r\\n                            Class to customize the Cancel button.\\r\\n                        </td>\\r\\n                    </tr>    \\r\\n                    <tr>\\r\\n                        <td>cpFallbackColor</td>\\r\\n                        <td>\\r\\n                            <b>'#fff'</b><br>\\r\\n                            Is used when the color is not well-formed or not defined.\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td>cpPresetLabel</td>\\r\\n                        <td>\\r\\n                            <b>'Preset colors'</b><br>\\r\\n                            Label for preset colors if any provided used.\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td>cpPresetColors</td>\\r\\n                        <td>\\r\\n                            <b>[]</b><br>\\r\\n                            Array of preset colors to show in the color picker dialog.\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td>cpToggle</td>\\r\\n                        <td>\\r\\n                            <b>false</b>, true<br>\\r\\n                            Input/ouput to open/close the color picker.\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td>cpIgnoredElements</td>\\r\\n                        <td>\\r\\n                            <b>[]</b><br>\\r\\n                            Array of HTML elements that will be ignored by the color picker when they are clicked.\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td>cpDialogDisplay</td>\\r\\n                        <td>\\r\\n                            <b>'popup'</b>, 'inline'<br>\\r\\n                            popup: dialog is showed when user clicks in the directive.<br>\\r\\n                            inline: dialog is showed permanently. You can show/hide the dialog with cpToggle.\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td>cpAlphaChannel</td>\\r\\n                        <td>\\r\\n                            <b>'hex6'</b>, 'hex8', 'disabled'<br>\\r\\n                            hex6: alpha channel is not allowed in hexadecimal values.<br>\\r\\n                            hex8: alpha channel is allowed in hexadecimal values.<br>\\r\\n                            disabled: alpha channel disabled.<br>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n    <hr>\\r\\n    <footer class=\\\"footer\\\">&copy; Alberto Pujante 2016 | <a href=\\\"https://github.com/Alberplz/angular2-color-picker\\\">Angular2 Color Picker</a></footer>\\r\\n    <br>\\r\\n\\r\\n</div>\";\n\n/***/ },\n\n/***/ 35:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"#changeme{\\n    font-size:30px;\\n    font-weight: bolder;\\n    cursor: pointer;\\n}\\n.cmyk{\\n    margin-left: 11px;\\n}\\n.cmyk div{\\n    height: 72px;\\n    width: 72px;\\n    line-height: 72px;\\n    text-align: center;\\n    float:left; \\n}\\n.cmyk span{\\n    font-weight: bolder;\\n    text-shadow: 1px 1px 2px #bbb;\\n}    \\n\\n#color-comparator button{ \\n    height: 26px;\\n    width: 26px;\\n    display: block;\\n    float:left;\\n    border:none;\\n    margin:0;\\n    padding:0;\\n    border: 2px solid #888;\\n}\\n\\n#color-comparator > input{ \\n    height: 26px;\\n    width: 182px;\\n    display: block;\\n    float:left;\\n    border:none;\\n    margin:0;\\n    padding:0;\\n}\\n\\n.array-colors-element{\\n    width: 100px;\\n    height: 25px;\\n    margin-bottom: 15px;\\n}\\n\"\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** app.cd516d9a368a91553c89.js\n **/","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { AppModule } from './app/app.module';\nif (process.env.ENV === 'production') {\n    enableProdMode();\n}\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/main.ts\n **/","import { NgModule } from '@angular/core';\nimport { BrowserModule }  from '@angular/platform-browser';\nimport { AppComponent } from './app.component';\nimport {ColorPickerModule, ColorPickerService} from 'angular2-color-picker/lib';\n\n@NgModule({\n    imports: [\n        BrowserModule,\n        ColorPickerModule\n    ],\n    declarations: [\n        AppComponent\n    ],\n    providers: [ColorPickerService],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/app.module.ts\n **/","import { Component } from '@angular/core';\nimport '../../public/css/styles.css';\nimport {ColorPickerService, Rgba} from 'angular2-color-picker/lib';\n\nexport class Cmyk {\n    constructor(public c: number, public m: number, public y: number, public k: number) { }\n}\n\n@Component({\n    selector: 'my-app',\n    template: require('./app.component.html'),\n    styles: [require('./app.component.css')]\n})\nexport class AppComponent {\n\n    constructor(private cpService: ColorPickerService) {\n        this.arrayColors['color'] = '#2883e9';\n        this.arrayColors['color2'] = '#e920e9';\n        this.arrayColors['color3'] = 'rgb(255,245,0)';\n        this.arrayColors['color4'] = 'rgb(236,64,64)';\n        this.arrayColors['color5'] = 'rgba(45,208,45,1)';\n    }\n\n    private color: string = '#2889e9';\n    private color2: string = \"hsla(300,82%,52%)\";\n    private color3: string = \"#fff500\";\n    private color4: string = \"rgb(236,64,64)\";\n    private color5: string = \"rgba(45,208,45,1)\";\n    private color6: string = \"#1973c0\";\n    private color7: string = \"#f200bd\";\n    private color8: string = \"#a8ff00\";\n    private color9: string = \"#278ce2\";\n    private color10: string = \"#0a6211\";\n    private color11: string = \"#f2ff00\";\n    private color12: string = \"#f200bd\";\n    private color13: string = \"#1973c0\";\n    private color14: string = \"#a8ff00\";\n    private color15: string = \"#a51ad6a3\";\n\n    private arrayColors: any = {};\n    private selectedColor: string = 'color';\n\n    private toggle: boolean;\n    private toggle2: boolean;\n    private lastColor = '#ff0';\n    private cmyk: Cmyk = new Cmyk(0, 0, 0, 0);\n\n    onChangeColor(color: string): Cmyk {\n        return this.rgbaToCmyk(this.cpService.hsvaToRgba(this.cpService.stringToHsva(color)));\n    }\n\n    rgbaToCmyk(rgba: Rgba): Cmyk {\n        let cmyk: Cmyk = new Cmyk(0, 0, 0, 0), k: number;\n        k = 1 - Math.max(rgba.r, rgba.g, rgba.b);\n        if (k == 1) return new Cmyk(0, 0, 0, 1);\n        cmyk.c = (1 - rgba.r - k) / (1 - k);\n        cmyk.m = (1 - rgba.g - k) / (1 - k);\n        cmyk.y = (1 - rgba.b - k) / (1 - k);\n        cmyk.k = k;\n        return cmyk;\n    }\n\n    onChangeColorHex8(color: string): string {\n        return this.cpService.outputFormat(this.cpService.stringToHsva(color, true), 'rgba', true);\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/app.component.ts\n **/","module.exports = \"<div class=\\\"container\\\">\\r\\n    <h1>Angular2 Color Picker Directive</h1>\\r\\n    <h4>A Color Picker Directive for Angular 2 with no dependencies.</h4>\\r\\n    <h4><b>by Alberto Pujante</b></h4>\\r\\n    <a class=\\\"btn btn-primary btn-lg\\\" href=\\\"https://github.com/Alberplz/angular2-color-picker\\\">View on Github</a>\\r\\n\\r\\n    <hr>\\r\\n    <div class=\\\"row\\\">         \\r\\n        <div class=\\\"col-md-5\\\">\\r\\n            <input [(colorPicker)]=\\\"color\\\" [style.background]=\\\"color\\\"/>\\r\\n        </div>   \\r\\n        <div class=\\\"col-md-7\\\">  \\r\\n            <p>Usage:</p>\\r\\n            <pre>\\r\\n&lt;input [(colorPicker)]=\\\"color\\\" \\r\\n       [style.background]=\\\"color\\\"/&gt;\\r\\n            </pre>            \\r\\n            <p>Or:</p>\\r\\n            <pre>\\r\\n&lt;input [colorPicker]=\\\"color\\\" \\r\\n        (colorPickerChange)=\\\"color=$event\\\"\\r\\n        [style.background]=\\\"color\\\"/&gt;\\r\\n            </pre>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <hr>\\r\\n    <div class=\\\"row\\\">         \\r\\n        <div class=\\\"col-md-5\\\">\\r\\n            <input [(colorPicker)]=\\\"color2\\\" \\r\\n                [style.background]=\\\"color2\\\" \\r\\n                [value]=\\\"color2\\\"/>\\r\\n        </div>   \\r\\n        <div class=\\\"col-md-7\\\">  \\r\\n            <p>Show the color in the input field:</p>\\r\\n            <pre>\\r\\n&lt;input [(colorPicker)]=\\\"color\\\" \\r\\n       [style.background]=\\\"color\\\" \\r\\n       [value]=\\\"color\\\"/&gt;\\r\\n            </pre>            \\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <hr>\\r\\n    <div class=\\\"row\\\">         \\r\\n        <div class=\\\"col-md-5\\\">\\r\\n            <input [(colorPicker)]=\\\"color3\\\" \\r\\n                [style.background]=\\\"color3\\\" \\r\\n                [value]=\\\"color3\\\"    \\r\\n                [cpOutputFormat]=\\\"'rgba'\\\"/><br><br>\\r\\n            <input [(colorPicker)]=\\\"color4\\\" \\r\\n                [style.background]=\\\"color4\\\" \\r\\n                [value]=\\\"color4\\\"    \\r\\n                [cpOutputFormat]=\\\"'hsla'\\\"/>\\r\\n        </div>   \\r\\n        <div class=\\\"col-md-7\\\">  \\r\\n            <p>Output format:</p>\\r\\n            <pre>\\r\\n&lt;input [(colorPicker)]=\\\"color\\\" \\r\\n       [style.background]=\\\"color\\\" \\r\\n       [value]=\\\"color\\\"\\r\\n       [cpOutputFormat]=\\\"'rgba'\\\"/&gt;\\r\\n            </pre>            \\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <hr>\\r\\n    <div class=\\\"row\\\" > \\r\\n        <div class=\\\"col-md-5\\\" >\\r\\n            <input [(colorPicker)]=\\\"color5\\\" \\r\\n                [style.background]=\\\"color5\\\"                   \\r\\n                [value]=\\\"color5\\\"\\r\\n                [cpPosition]=\\\"'bottom'\\\"/>\\r\\n        </div>   \\r\\n        <div class=\\\"col-md-7\\\">  \\r\\n            <p>Changing dialog position:</p>\\r\\n            <pre>\\r\\n&lt;input [(colorPicker)]=\\\"color\\\" \\r\\n       [style.background]=\\\"color\\\" \\r\\n       [value]=\\\"color\\\"\\r\\n       [cpPosition]=\\\"'bottom'\\\"/&gt;\\r\\n            </pre>            \\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <hr>\\r\\n    <div class=\\\"row\\\" > \\r\\n        <div class=\\\"col-md-5\\\" >\\r\\n            <span id=\\\"changeme\\\" [(colorPicker)]=\\\"color6\\\" \\r\\n                  [style.color]=\\\"color6\\\"\\r\\n                  [cpPosition]=\\\"'bottom'\\\"\\r\\n                  [cpPositionOffset]=\\\"'50%'\\\"\\r\\n                  [cpPositionRelativeToArrow]=\\\"true\\\">Change me!</span>\\r\\n        </div>   \\r\\n        <div class=\\\"col-md-7\\\">  \\r\\n            <p>You can introduce a offset of the color picker relative to the html element:</p>\\r\\n            <pre>\\r\\n&lt;span [(colorPicker)]=\\\"color\\\" \\r\\n      [cpPosition]=\\\"'bottom'\\\"\\r\\n      [style.color]=\\\"color\\\"\\r\\n      [cpPositionOffset]=\\\"'50%'\\\"\\r\\n      [cpPositionRelativeToArrow]=\\\"true\\\">Change me!&lt;/span&gt;\\r\\n            </pre>            \\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <hr>\\r\\n    <div class=\\\"row\\\" > \\r\\n        <div class=\\\"col-md-5\\\" >\\r\\n            <input [(colorPicker)]=\\\"color7\\\" \\r\\n                [style.background]=\\\"color7\\\"                   \\r\\n                [value]=\\\"color7\\\"\\r\\n                [cpCancelButton]=\\\"true\\\"/>\\r\\n        </div>   \\r\\n        <div class=\\\"col-md-7\\\">  \\r\\n            <p>Show cancel button:</p>\\r\\n            <pre>\\r\\n&lt;input [(colorPicker)]=\\\"color\\\" \\r\\n       [style.background]=\\\"color\\\" \\r\\n       [value]=\\\"color\\\"\\r\\n       [cpCancelButton]=\\\"true\\\"/&gt;\\r\\n            </pre>            \\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <hr>\\r\\n    <div class=\\\"row\\\" > \\r\\n        <div class=\\\"col-md-5\\\" >\\r\\n            <input [(colorPicker)]=\\\"color8\\\" \\r\\n                [style.background]=\\\"color8\\\"                   \\r\\n                [value]=\\\"color8\\\"\\r\\n                [cpCancelButton]=\\\"true\\\"\\r\\n                [cpCancelButtonClass]= \\\"'btn btn-primary btn-xs'\\\"/>\\r\\n        </div>   \\r\\n        <div class=\\\"col-md-7\\\">  \\r\\n            <p>Change cancel button class, in this example we are using a bootstrap button:</p>\\r\\n            <pre>\\r\\n&lt;input [(colorPicker)]=\\\"color\\\" \\r\\n       [style.background]=\\\"color\\\" \\r\\n       [value]=\\\"color\\\"\\r\\n       [cpCancelButton]=\\\"true\\\"\\r\\n       [cpCancelButtonClass]= \\\"'btn btn-primary btn-xs'\\\"/&gt;\\r\\n            </pre>            \\r\\n        </div>\\r\\n    </div>\\r\\n    \\r\\n    <hr>\\r\\n    <div class=\\\"row\\\" > \\r\\n        <div class=\\\"col-md-5\\\" >\\r\\n            <input [(colorPicker)]=\\\"color9\\\" \\r\\n                [style.background]=\\\"color9\\\"                   \\r\\n                [value]=\\\"color9\\\"\\r\\n                [cpOKButton]=\\\"true\\\"\\r\\n                [cpSaveClickOutside]=\\\"false\\\"\\r\\n                [cpOKButtonClass]= \\\"'btn btn-primary btn-xs'\\\"/>\\r\\n        </div>   \\r\\n        <div class=\\\"col-md-7\\\">  \\r\\n            <p>Show OK button:</p>\\r\\n            <pre>\\r\\n&lt;input [(colorPicker)]=\\\"color\\\" \\r\\n       [style.background]=\\\"color\\\" \\r\\n       [value]=\\\"color\\\"\\r\\n       [cpOKButton]=\\\"true\\\"\\r\\n       [cpSaveClickOutside]=\\\"false\\\"\\r\\n       [cpOKButtonClass]= \\\"'btn btn-primary btn-xs'\\\"/&gt;\\r\\n            </pre>            \\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <hr>\\r\\n    <div class=\\\"row\\\">         \\r\\n        <div class=\\\"col-md-5\\\">\\r\\n\\r\\n            <input [colorPicker]=\\\"color10\\\" \\r\\n                (colorPickerChange)=\\\"cmyk=onChangeColor($event);color10=$event\\\"\\r\\n                [style.background]=\\\"color10\\\"/>  \\r\\n\\r\\n            <div class=\\\"clearfix\\\"></div>\\r\\n\\r\\n            <div class=\\\"cmyk\\\">\\r\\n                <div>\\r\\n                    <span style=\\\"color:rgb(0,255,255);\\\" [style.font-size.px]=\\\"100*cmyk.c\\\">C</span>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <span style=\\\"color:rgb(255,0,255)\\\" [style.font-size.px]=\\\"100*cmyk.m\\\">M</span>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"clearfix\\\"></div>\\r\\n\\r\\n            <div class=\\\"cmyk\\\">    \\r\\n                <div>\\r\\n                    <span style=\\\"color:rgb(255,255,0)\\\" [style.font-size.px]=\\\"100*cmyk.y\\\">Y</span>\\r\\n                </div>    \\r\\n                <div>\\r\\n                    <span [style.font-size.px]=\\\"100*cmyk.k\\\">K</span>\\r\\n                </div>    \\r\\n            </div>\\r\\n            <div class=\\\"clearfix\\\"></div>\\r\\n            \\r\\n        </div>   \\r\\n        <div class=\\\"col-md-7\\\">  \\r\\n            <p>Change event color:</p>\\r\\n            <pre>\\r\\n&lt;input [colorPicker]=\\\"color\\\" \\r\\n       (colorPickerChange)=\\\"cmyk=onChangeColor($event);color=$event\\\"\\r\\n       [style.background]=\\\"color\\\"/&gt;\\r\\n\\r\\n&lt;span [style.font-size.px]=\\\"100*cmyk.c\\\"/&gt;C&lt;/span/&gt;\\r\\n&lt;span [style.font-size.px]=\\\"100*cmyk.m\\\"/&gt;M&lt;/span/&gt;\\r\\n&lt;span [style.font-size.px]=\\\"100*cmyk.y\\\"/&gt;Y&lt;/span/&gt;\\r\\n&lt;span [style.font-size.px]=\\\"100*cmyk.k\\\"/&gt;K&lt;/span/&gt;\\r\\n            </pre>            \\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <hr>\\r\\n    <div class=\\\"row\\\">         \\r\\n        <div class=\\\"col-md-5\\\">\\r\\n            <input [(colorPicker)]=\\\"color11\\\" \\r\\n                [style.background]=\\\"color11\\\" \\r\\n                [cpPresetColors]=\\\"['#fff', '#000', '#2889e9', '#e920e9', '#fff500', 'rgb(236,64,64)']\\\"/>\\r\\n        </div>   \\r\\n        <div class=\\\"col-md-7\\\">  \\r\\n            <p>With preset colors:</p>\\r\\n            <pre>\\r\\n&lt;input [(colorPicker)]=\\\"color\\\" \\r\\n       [style.background]=\\\"color\\\"\\r\\n       [cpPresetColors]=\\\"['#fff', '#000', '#2889e9', '#e920e9', '#fff500', 'rgb(236,64,64)']\\\"/&gt;\\r\\n            </pre>            \\r\\n        </div>\\r\\n    </div>\\r\\n    \\r\\n    <hr>\\r\\n    <div class=\\\"row\\\">         \\r\\n        <div class=\\\"col-md-5\\\">\\r\\n            <input #ignoredInput [(colorPicker)]=\\\"color12\\\"                \\r\\n                [(cpToggle)]=\\\"toggle2\\\" \\r\\n                [style.background]=\\\"color12\\\" \\r\\n                [cpIgnoredElements]=\\\"[ignoredButton, ignoredInput]\\\"/>             \\r\\n            <div class=\\\"clearfix\\\"></div>          \\r\\n            <button class=\\\"btn btn-primary\\\" \\r\\n                    (click)=\\\"toggle2=!toggle2;\\\" #ignoredButton>Toggle</button>\\r\\n            <br><br>\\r\\n            <div><b>Toggle status: {{toggle2}}</b></div>\\r\\n        </div>  \\r\\n        <div class=\\\"col-md-7\\\">  \\r\\n            <p>Use cpToggle with cpIgnoredElements:</p>\\r\\n            <pre>\\r\\n&lt;input #ignoredInput [(colorPicker)]=\\\"color\\\"\\r\\n       [(cpToggle)]=\\\"toggle\\\"\\r\\n       [style.background]=\\\"color\\\"\\r\\n       [cpIgnoredElements]=\\\"[ignoredButton, ignoredInput]\\\"/&gt;\\r\\n\\r\\n&lt;button (click)=\\\"toggle=!toggle;lastColor=color\\\"  \\r\\n         #ignoredButton&gt;&lt;/button&gt;    \\r\\n            </pre>            \\r\\n        </div>\\r\\n    </div>\\r\\n       \\r\\n    <hr>\\r\\n    <div class=\\\"row\\\">         \\r\\n        <div class=\\\"col-md-5\\\">\\r\\n            <input [(colorPicker)]=\\\"color13\\\" \\r\\n                [style.background]=\\\"color13\\\" \\r\\n                [cpAlphaChannel]=\\\"'disabled'\\\"\\r\\n                [value]=\\\"color13\\\"/>\\r\\n            <br>\\r\\n            <input [(colorPicker)]=\\\"color14\\\" \\r\\n                [style.background]=\\\"color14\\\" \\r\\n                [cpAlphaChannel]=\\\"'hex8'\\\"\\r\\n                [cpOutputFormat]=\\\"'rgba'\\\"\\r\\n                [value]=\\\"color14\\\"/>\\r\\n            <br>\\r\\n            <input [colorPicker]=\\\"color15\\\" \\r\\n                (colorPickerChange)=\\\"rgbaText=onChangeColorHex8($event);color15=$event\\\"\\r\\n                [style.background]=\\\"rgbaText\\\" \\r\\n                [cpAlphaChannel]=\\\"'hex8'\\\"   \\r\\n                [cpOutputFormat]=\\\"'hex'\\\"\\r\\n                [value]=\\\"color15\\\"/>\\r\\n        </div>   \\r\\n        <div class=\\\"col-md-7\\\">  \\r\\n            <p>Change alpha channel behaviour:</p>\\r\\n            <pre>\\r\\n&lt;input [(colorPicker)]=\\\"color\\\" \\r\\n       [style.background]=\\\"color\\\" \\r\\n       [cpAlphaChannel]=\\\"'disabled'\\\"\\r\\n       [value]=\\\"color\\\"/&gt;\\r\\n\\r\\n&lt;input [(colorPicker)]=\\\"color\\\" \\r\\n       [style.background]=\\\"color\\\" \\r\\n       [cpAlphaChannel]=\\\"'hex8'\\\"\\r\\n       [cpOutputFormat]=\\\"'rgba'\\\"\\r\\n       [value]=\\\"color\\\"/&gt;\\r\\n\\r\\n&lt;input [colorPicker]=\\\"color\\\" \\r\\n       (colorPickerChange)=\\\"rgbaText=onChangeColorHex8($event);color=$event\\\"\\r\\n       [style.background]=\\\"rgbaText\\\" \\r\\n       [cpAlphaChannel]=\\\"'hex8'\\\"    \\r\\n       [value]=\\\"color\\\"/&gt;\\r\\n            </pre>            \\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n        <hr>\\r\\n    <div class=\\\"row\\\" style=\\\"height: 320px\\\">         \\r\\n        \\r\\n        <div class=\\\"col-md-3\\\">\\r\\n            <span [(colorPicker)]=\\\"arrayColors[selectedColor]\\\"     \\r\\n                [cpDialogDisplay]=\\\"'inline'\\\"\\r\\n                [style.background]=\\\"arrayColors[selectedColor]\\\"\\r\\n                [cpCancelButtonClass]= \\\"'btn btn-primary btn-xs'\\\"\\r\\n                [cpCancelButton]=\\\"true\\\"\\r\\n                [cpToggle]=\\\"true\\\">\\r\\n            </span>             \\r\\n        </div>\\r\\n        \\r\\n        <div class=\\\"col-md-2\\\">\\r\\n            \\r\\n            <div class=\\\"array-colors-element\\\"\\r\\n                    [style.background]=\\\"arrayColors['color']\\\"\\r\\n                    (click)=\\\"selectedColor='color'\\\"></div>\\r\\n\\r\\n            <div class=\\\"array-colors-element\\\"\\r\\n                    [style.background]=\\\"arrayColors['color2']\\\"\\r\\n                    (click)=\\\"selectedColor='color2'\\\"></div>\\r\\n            \\r\\n            <div class=\\\"array-colors-element\\\"\\r\\n                    [style.background]=\\\"arrayColors['color3']\\\"\\r\\n                    (click)=\\\"selectedColor='color3'\\\"></div>\\r\\n            \\r\\n            <div class=\\\"array-colors-element\\\"\\r\\n                    [style.background]=\\\"arrayColors['color4']\\\"\\r\\n                    (click)=\\\"selectedColor='color4'\\\"></div>\\r\\n            \\r\\n            <div class=\\\"array-colors-element\\\"\\r\\n                    [style.background]=\\\"arrayColors['color5']\\\"\\r\\n                    (click)=\\\"selectedColor='color5'\\\"></div>\\r\\n                        \\r\\n        </div>                \\r\\n\\r\\n        <div class=\\\"col-md-7\\\">  \\r\\n            <p>Show the dialog permanently: </p>\\r\\n            <pre>\\r\\n&lt;span [(colorPicker)]=\\\"arrayColors[selectedColor]\\\"     \\r\\n      [cpType]=\\\"'fixed'\\\"\\r\\n      [style.background]=\\\"arrayColors[selectedColor]\\\"\\r\\n      [cpToggle]=\\\"true\\\"&gt;&lt;/span&gt;\\r\\n\\r\\n&lt;div [style.background]=\\\"arrayColors['color']\\\"\\r\\n     (click)=\\\"selectedColor='color'\\\"&gt;&lt;/div&gt;\\r\\n\\r\\n&lt;div [style.background]=\\\"arrayColors['color2']\\\"\\r\\n     (click)=\\\"selectedColor='color2'\\\"&gt;&lt;/div&gt;\\r\\n\\r\\n...\\r\\n            </pre>            \\r\\n        </div>\\r\\n    </div>\\r\\n        \\r\\n    <hr>\\r\\n    <br>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <table class=\\\"table\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th>Options</th>\\r\\n                        <th>Values (default values in bold)</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr>\\r\\n                        <td>cpOutputFormat</td>\\r\\n                        <td>\\r\\n                            <b>'hex'</b>, 'rgba', 'hsla'\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td>cpPosition</td>\\r\\n                        <td>\\r\\n                            <b>'right'</b>, 'left', 'top', 'bottom'\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td>cpPositionOffset</td>\\r\\n                        <td>                            \\r\\n                            <b>'0%'</b><br>\\r\\n                            Dialog offset (percent) relative to the element that contains the directive.\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td>cpPositionRelativeToArrow</td>\\r\\n                        <td>                            \\r\\n                            <b>false</b>, true <br>\\r\\n                            Dialog position is calculated relative to the dialog (false) or relative to the dialog arrow (true).\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td>cpWidth</td>\\r\\n                        <td>                            \\r\\n                            <b>'230px'</b><br>\\r\\n                            Use this option to set color picker dialog width (pixels).\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td>cpHeight</td>\\r\\n                        <td>                            \\r\\n                            <b>'auto'</b><br>\\r\\n                            Use this option to force color picker dialog height (pixels).\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td>cpSaveClickOutside</td>\\r\\n                        <td>                            \\r\\n                            <b>true</b>, false<br>\\r\\n                            If true the initial color is restored when user clicks outside.\\r\\n                        </td>\\r\\n                    </tr>                                    \\r\\n                    <tr>\\r\\n                        <td>cpOKButton</td>\\r\\n                        <td>                            \\r\\n                            <b>false</b>, true<br>  \\r\\n                            Shows the Ok button. Saves the selected color.\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td>cpOKButtonText</td>\\r\\n                        <td>\\r\\n                            <b>'OK'</b>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td>cpOKButtonClass</td>\\r\\n                        <td>                            \\r\\n                            Class to customize the OK button.\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td>cpCancelButton</td>\\r\\n                        <td>                             \\r\\n                            <b>false</b>, true<br>\\r\\n                            Shows the Cancel button. Cancel the selected color.\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td>cpCancelButtonText</td>\\r\\n                        <td>\\r\\n                            <b>'Cancel'</b>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td>cpCancelButtonClass</td>\\r\\n                        <td>                            \\r\\n                            Class to customize the Cancel button.\\r\\n                        </td>\\r\\n                    </tr>    \\r\\n                    <tr>\\r\\n                        <td>cpFallbackColor</td>\\r\\n                        <td>\\r\\n                            <b>'#fff'</b><br>\\r\\n                            Is used when the color is not well-formed or not defined.\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td>cpPresetLabel</td>\\r\\n                        <td>\\r\\n                            <b>'Preset colors'</b><br>\\r\\n                            Label for preset colors if any provided used.\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td>cpPresetColors</td>\\r\\n                        <td>\\r\\n                            <b>[]</b><br>\\r\\n                            Array of preset colors to show in the color picker dialog.\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td>cpToggle</td>\\r\\n                        <td>\\r\\n                            <b>false</b>, true<br>\\r\\n                            Input/ouput to open/close the color picker.\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td>cpIgnoredElements</td>\\r\\n                        <td>\\r\\n                            <b>[]</b><br>\\r\\n                            Array of HTML elements that will be ignored by the color picker when they are clicked.\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td>cpDialogDisplay</td>\\r\\n                        <td>\\r\\n                            <b>'popup'</b>, 'inline'<br>\\r\\n                            popup: dialog is showed when user clicks in the directive.<br>\\r\\n                            inline: dialog is showed permanently. You can show/hide the dialog with cpToggle.\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td>cpAlphaChannel</td>\\r\\n                        <td>\\r\\n                            <b>'hex6'</b>, 'hex8', 'disabled'<br>\\r\\n                            hex6: alpha channel is not allowed in hexadecimal values.<br>\\r\\n                            hex8: alpha channel is allowed in hexadecimal values.<br>\\r\\n                            disabled: alpha channel disabled.<br>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n    <hr>\\r\\n    <footer class=\\\"footer\\\">&copy; Alberto Pujante 2016 | <a href=\\\"https://github.com/Alberplz/angular2-color-picker\\\">Angular2 Color Picker</a></footer>\\r\\n    <br>\\r\\n\\r\\n</div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/app.component.html\n ** module id = 34\n ** module chunks = 0\n **/","module.exports = \"#changeme{\\n    font-size:30px;\\n    font-weight: bolder;\\n    cursor: pointer;\\n}\\n.cmyk{\\n    margin-left: 11px;\\n}\\n.cmyk div{\\n    height: 72px;\\n    width: 72px;\\n    line-height: 72px;\\n    text-align: center;\\n    float:left; \\n}\\n.cmyk span{\\n    font-weight: bolder;\\n    text-shadow: 1px 1px 2px #bbb;\\n}    \\n\\n#color-comparator button{ \\n    height: 26px;\\n    width: 26px;\\n    display: block;\\n    float:left;\\n    border:none;\\n    margin:0;\\n    padding:0;\\n    border: 2px solid #888;\\n}\\n\\n#color-comparator > input{ \\n    height: 26px;\\n    width: 182px;\\n    display: block;\\n    float:left;\\n    border:none;\\n    margin:0;\\n    padding:0;\\n}\\n\\n.array-colors-element{\\n    width: 100px;\\n    height: 25px;\\n    margin-bottom: 15px;\\n}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/app.component.css\n ** module id = 35\n ** module chunks = 0\n **/"],"sourceRoot":""}